/* This function will plot a graph for the givin 2-column 2D array.
 * container(String): The div that contain the plot
 * input(Object []): The array that contains the data(data, xlabel, ylabel)
 */
function plot_graph(container, input){
	var output = [];
	//alert(input.length);
	for(var a=0; a<input.length; a++){
		var bias = {};
		bias.v1 = {
			type: input[a].xlabel,
			init: 0,
			end: 0
		};
		
		
		//found the min of X-axis
		for(var j = 0; j < input[a].data.length; j++){
			if(bias.v1.init > input[a].data[j][0])
				bias.v1.init = input[a].data[j][0];
		}
		
		//found the max of X-axis
		for(var j = 1; j < input[a].data.length; j++){
			if(bias.v1.end < input[a].data[j][0])
				bias.v1.end = input[a].data[j][0];
		}
		
		//alert("x:"+bias.v1.type+" init:"+bias.v1.init+" end:"+bias.v1.end);
		
		
		//convert vertical 2D array to 3D array for jqplot use
		var dat = [];
	
		var init = input[a].data[0][0];
		dat.push([input[a].data[0]]);
		
		for (var i = 0, j = 1; j < input[a].data.length; ++j) {
			if (input[a].data[j][0] != init) {
				dat[i].push(input[a].data[j]);
			} else {
				++i;
				dat.push([input[a].data[j]]);										
			}
		}
		
		
		var out = {
			id: 0,
			name: input[a].ylabel,
			plot: {
				linear: true,
				log: false
			},
			data: dat,
			bias: bias,
			downloadLink: 'output.csv'
		};
		
		output[a] = out;
		//alert("finish prasing "+a);
	}
	
	plotGraphs(container, output);
		
}
